package org.example;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

public class AppointmentForm extends JFrame {
    private final User user;

    private JTextField serviceField;
    private JTextArea notesArea;
    private JSpinner dateSpinner;
    private JLabel logoLabel;

    public AppointmentForm(User user) {
        this.user = user;
        setTitle("üßñ‚Äç‚ôÄÔ∏è ƒê·∫∑t l·ªãch chƒÉm s√≥c da");
        setSize(500, 550);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setResizable(false);
        initUI();
    }

    private void initUI() {
        // ‚úÖ Load ·∫£nh n·ªÅn t·ª´ th∆∞ m·ª•c resources/images/spa.jpg
        Image bgImage = null;
        try {
            bgImage = new ImageIcon(getClass().getResource("/images/spa.jpg")).getImage();
        } catch (Exception e) {
            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y ·∫£nh n·ªÅn spa.jpg!");
        }

        BackgroundPanel backgroundPanel = new BackgroundPanel(bgImage);
        backgroundPanel.setLayout(new GridBagLayout());
        backgroundPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 10, 10, 10);

        // ‚úÖ Hi·ªÉn th·ªã logo ·ª©ng d·ª•ng t·ª´ resources/images/logo.png
        java.net.URL logoURL = getClass().getClassLoader().getResource("images/logo.jpg");
        if (logoURL != null) {
            ImageIcon logoIcon = new ImageIcon(logoURL);
            Image scaledLogo = logoIcon.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
            logoLabel = new JLabel(new ImageIcon(scaledLogo));
        } else {
            System.out.println("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y ·∫£nh logo! ƒê·∫£m b·∫£o ·∫£nh n·∫±m trong src/main/resources/images/logo.png");
            logoLabel = new JLabel("üå∏ Spa Care");
        }


        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.CENTER;
        backgroundPanel.add(logoLabel, gbc);

        // N√∫t xem l·ªãch h·∫πn
        JButton viewButton = new JButton("üìã Xem l·ªãch h·∫πn");
        viewButton.setFont(new Font("Arial", Font.PLAIN, 14));
        viewButton.addActionListener(this::handleViewAppointments);
        gbc.gridy++;
        backgroundPanel.add(viewButton, gbc);

        // Ng√†y gi·ªù h·∫πn
        gbc.gridy++;
        gbc.gridwidth = 1;
        backgroundPanel.add(new JLabel("üóì Ng√†y gi·ªù h·∫πn:"), gbc);

        dateSpinner = new JSpinner(new SpinnerDateModel());
        JSpinner.DateEditor dateEditor = new JSpinner.DateEditor(dateSpinner, "yyyy-MM-dd HH:mm");
        dateSpinner.setEditor(dateEditor);
        dateSpinner.setValue(new Date());
        gbc.gridx = 1;
        backgroundPanel.add(dateSpinner, gbc);

        // T√™n d·ªãch v·ª•
        gbc.gridy++;
        gbc.gridx = 0;
        backgroundPanel.add(new JLabel("üß¥ D·ªãch v·ª•:"), gbc);

        serviceField = new JTextField();
        gbc.gridx = 1;
        backgroundPanel.add(serviceField, gbc);

        // Ghi ch√∫
        gbc.gridy++;
        gbc.gridx = 0;
        backgroundPanel.add(new JLabel("üìù Ghi ch√∫:"), gbc);

        notesArea = new JTextArea(3, 20);
        JScrollPane scrollPane = new JScrollPane(notesArea);
        gbc.gridx = 1;
        backgroundPanel.add(scrollPane, gbc);

        // N√∫t ƒë·∫∑t l·ªãch
        JButton bookButton = new JButton("‚úÖ ƒê·∫∑t l·ªãch");
        bookButton.setFont(new Font("Arial", Font.BOLD, 14));
        bookButton.addActionListener(this::handleBooking);
        gbc.gridy++;
        gbc.gridx = 0;
        gbc.gridwidth = 2;
        backgroundPanel.add(bookButton, gbc);

        setContentPane(backgroundPanel);
    }

    // X·ª≠ l√Ω ƒë·∫∑t l·ªãch
    private void handleBooking(ActionEvent e) {
        Date utilDate = (Date) dateSpinner.getValue();
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
        java.sql.Time sqlTime = new java.sql.Time(utilDate.getTime());

        String service = serviceField.getText().trim();
        String notes = notesArea.getText().trim();

        if (service.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui l√≤ng nh·∫≠p t√™n d·ªãch v·ª•.");
            return;
        }

        Appointment appt = new Appointment();
        appt.setUserID(user.getUserID());
        appt.setAppointmentDate(sqlDate);
        appt.setAppointmentTime(sqlTime);
        appt.setServiceName(service);
        appt.setNotes(notes);

        AppointmentDAO dao = new AppointmentDAO();
        if (dao.bookAppointment(appt)) {
            JOptionPane.showMessageDialog(this, "üéâ ƒê·∫∑t l·ªãch th√†nh c√¥ng!");
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "‚ùå L·ªói khi ƒë·∫∑t l·ªãch.");
        }
    }

    // Xem danh s√°ch l·ªãch h·∫πn
    private void handleViewAppointments(ActionEvent e) {
        AppointmentDAO dao = new AppointmentDAO();
        List<Appointment> appointments = dao.getAppointmentsByUser(user.getUserID());

        if (appointments.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Kh√¥ng c√≥ l·ªãch h·∫πn n√†o.");
            return;
        }

        StringBuilder sb = new StringBuilder();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm");

        for (Appointment appt : appointments) {
            String dateStr = (appt.getAppointmentDate() != null) ? dateFormat.format(appt.getAppointmentDate()) : "N/A";
            String timeStr = (appt.getAppointmentTime() != null) ? timeFormat.format(appt.getAppointmentTime()) : "N/A";

            sb.append("üìÖ Ng√†y: ").append(dateStr)
                    .append(" üïí Gi·ªù: ").append(timeStr)
                    .append("\nüß¥ D·ªãch v·ª•: ").append(appt.getServiceName() != null ? appt.getServiceName() : "")
                    .append("\nüìù Ghi ch√∫: ").append(appt.getNotes() != null ? appt.getNotes() : "")
                    .append("\n---------------------------\n");
        }

        JTextArea textArea = new JTextArea(sb.toString(), 15, 30);
        textArea.setEditable(false);
        textArea.setFont(new Font("Monospaced", Font.PLAIN, 13));
        JScrollPane scrollPane = new JScrollPane(textArea);
        JOptionPane.showMessageDialog(this, scrollPane, "üìã Danh s√°ch l·ªãch h·∫πn", JOptionPane.INFORMATION_MESSAGE);
    }
}
